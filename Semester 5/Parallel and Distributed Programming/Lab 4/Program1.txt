using System;
using System.IO;
using System.Net.Sockets;
using System.Text;

class HttpDownloader
{
    public void DownloadFile(string host, string path, string outputFilePath)
    {
        var socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);

        try
        {
            socket.BeginConnect(host, 80, ar =>
            {
                try
                {
                    socket.EndConnect(ar);

                    string request = $"GET {path} HTTP/1.1\r\nHost: {host}\r\nConnection: Close\r\n\r\n";
                    byte[] requestBytes = Encoding.ASCII.GetBytes(request);

                    socket.BeginSend(requestBytes, 0, requestBytes.Length, SocketFlags.None, sendAr =>
                    {
                        try
                        {
                            socket.EndSend(sendAr);

                            byte[] buffer = new byte[8192];
                            var fileStream = new FileStream(outputFilePath, FileMode.Create);
                            StringBuilder headers = new StringBuilder();
                            bool headersParsed = false;

                            void ReceiveCallback(IAsyncResult recvAr)
                            {
                                try
                                {
                                    int received = socket.EndReceive(recvAr);
                                    if (received == 0)
                                    {
                                        fileStream.Close();
                                        socket.Close();
                                        Console.WriteLine($"File downloaded successfully to: {outputFilePath}");
                                        return;
                                    }

                                    string responsePart = Encoding.ASCII.GetString(buffer, 0, received);

                                    if (!headersParsed)
                                    {
                                        headers.Append(responsePart);
                                        int headerEndIndex = headers.ToString().IndexOf("\r\n\r\n");
                                        if (headerEndIndex >= 0)
                                        {
                                            headersParsed = true;
                                            Console.WriteLine("Headers:\n" + headers.ToString(0, headerEndIndex) + "\n");

                                            int bodyStartIndex = headerEndIndex + 4;
                                            fileStream.Write(buffer, bodyStartIndex, received - bodyStartIndex);
                                        }
                                    }
                                    else
                                    {
                                        fileStream.Write(buffer, 0, received);
                                    }

                                    socket.BeginReceive(buffer, 0, buffer.Length, SocketFlags.None, ReceiveCallback, null);
                                }
                                catch (Exception ex)
                                {
                                    Console.WriteLine("Error during receive: " + ex.Message);
                                }
                            }

                            socket.BeginReceive(buffer, 0, buffer.Length, SocketFlags.None, ReceiveCallback, null);
                        }
                        catch (Exception ex)
                        {
                            Console.WriteLine("Error during send: " + ex.Message);
                        }
                    }, null);
                }
                catch (Exception ex)
                {
                    Console.WriteLine("Error during connect: " + ex.Message);
                }
            }, null);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        string host = "httpbin.org";
        string path = "/html";
        string outputFilePath = "downloaded_file_event.html";

        Console.WriteLine($"Downloading {path} from {host} using event-driven approach...");
        var downloader = new HttpDownloader();
        downloader.DownloadFile(host, path, outputFilePath);

        Console.ReadLine();
    }
}
